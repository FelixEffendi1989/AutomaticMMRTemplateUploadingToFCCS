<Activity mc:Ignorable="sap sap2010" x:Class="Process_Excel" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ProjectConfig" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="In_filePath" Type="InArgument(x:String)" />
    <x:Property Name="in_dtv2023vx" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_dtBUConfig" Type="InArgument(sd:DataTable)" />
    <x:Property Name="logFile" Type="InArgument(x:String)" />
    <x:Property Name="in_out_dtProcessResult" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="in_currentRow" Type="InArgument(sd:DataRow)" />
    <x:Property Name="In_Out_dtReportBSBalance" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="In_Out_dtReportPLBSInput" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="In_Out_dtReportCheckSummary" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="In_Out_dtReportSumLoad" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="In_Out_dtReportLoadBalance" Type="InOutArgument(sd:DataTable)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>925,17708</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Process_Excel_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Activities.System.Arrays</x:String>
      <x:String>UiPath.Activities.System.Collections</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Process_Excel" sap:VirtualizedContainerService.HintSize="712,10063" sap2010:WorkflowViewState.IdRef="Sequence_72">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="templateVersion" />
      <Variable x:TypeArguments="x:String" Name="excelVersion" />
      <Variable x:TypeArguments="x:String" Name="entityValue" />
      <Variable x:TypeArguments="x:String" Name="loadStatsOnly" />
      <Variable x:TypeArguments="sd:DataTable" Default="[new DataTable]" Name="dtLoadFlag" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, s:String[])" Default="[new Dictionary(Of String, String())]" Name="dictCellRange" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtScenarioValue" />
      <Variable x:TypeArguments="x:String" Name="docName" />
      <Variable x:TypeArguments="x:String" Name="docBUCode" />
      <Variable x:TypeArguments="x:String" Name="docDate" />
      <Variable x:TypeArguments="x:String" Name="chkPageName" />
      <Variable x:TypeArguments="x:String" Name="load_sht_hs_set_range" />
      <Variable x:TypeArguments="x:String" Name="reportValue" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtTemplate" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtCoB" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch Get Excel Version" sap:VirtualizedContainerService.HintSize="650,427" sap2010:WorkflowViewState.IdRef="TryCatch_12">
      <TryCatch.Variables>
        <Variable x:TypeArguments="x:String" Name="version1" />
        <Variable x:TypeArguments="x:String" Name="version2" />
      </TryCatch.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="450,199" sap2010:WorkflowViewState.IdRef="Sequence_21">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ReadCell Cell="B1" DisplayName="Read Cell Workbook" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ReadCell_6" SheetName="Checks" WorkbookPath="[In_filePath]">
            <ui:ReadCell.Result>
              <OutArgument x:TypeArguments="x:String">[version1]</OutArgument>
            </ui:ReadCell.Result>
          </ui:ReadCell>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="454,21" sap2010:WorkflowViewState.IdRef="Catch`1_11">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="550,660" sap2010:WorkflowViewState.IdRef="Sequence_19">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="488,82" sap2010:WorkflowViewState.IdRef="Assign_20">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[version1]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </Assign.Value>
              </Assign>
              <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="488,427" sap2010:WorkflowViewState.IdRef="TryCatch_13">
                <TryCatch.Try>
                  <Sequence sap:VirtualizedContainerService.HintSize="450,199" sap2010:WorkflowViewState.IdRef="Sequence_23">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ReadCell Cell="B2" DisplayName="Read Cell Workbook" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="ReadCell_7" SheetName="Chk" WorkbookPath="[In_filePath]">
                      <ui:ReadCell.Result>
                        <OutArgument x:TypeArguments="x:String">[version2]</OutArgument>
                      </ui:ReadCell.Result>
                    </ui:ReadCell>
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="454,21" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_21">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[version2]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Sequence sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_49">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_22">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[excelVersion]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[String.Concat(version1,version2)]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </TryCatch.Finally>
    </TryCatch>
    <If Condition="[excelVersion.Trim.ToLower.Split(&quot;v&quot;)(0) &lt; in_ProjectConfig(&quot;ExcelVersion&quot;).Trim.ToLower.Split(&quot;v&quot;)(0)]" DisplayName="If Current Excel Version is Lower" sap:VirtualizedContainerService.HintSize="650,360" sap2010:WorkflowViewState.IdRef="If_9">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="376,178" sap2010:WorkflowViewState.IdRef="Sequence_50">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Throw Exception="[New Exception(&quot;Please upload manually!!&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_5" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_51">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <Sequence DisplayName="Set Values" sap:VirtualizedContainerService.HintSize="650,1774" sap2010:WorkflowViewState.IdRef="Sequence_48">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="544,82" sap2010:WorkflowViewState.IdRef="Assign_34">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[docName]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Path.GetFileNameWithoutExtension(In_filePath).Split(" ").First]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="544,82" sap2010:WorkflowViewState.IdRef="Assign_35">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[docBUCode]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Path.GetFileNameWithoutExtension(In_filePath).Split(" ")(1)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="544,82" sap2010:WorkflowViewState.IdRef="Assign_36">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[docDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Path.GetFileNameWithoutExtension(In_filePath).Split(" ")(2)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="544,83" sap2010:WorkflowViewState.IdRef="Assign_31">
        <Assign.To>
          <OutArgument x:TypeArguments="sd:DataTable">[dtScenarioValue]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sd:DataTable" xml:space="preserve">[(From x In in_dtv2023vx.AsEnumerable()
Where x("Variable").ToString.Equals("cover_sht_scenario_value") Or 
x("Variable").ToString.Equals("load_sht_load_flag_value") Or
x("Variable").ToString.Equals("load_sht_hs_set_range") Or
x("Variable").ToString.Equals("load_sht_validation_formula_range") Or
x("Variable").ToString.Equals("total_bs_bal_in_input_range") Or
x("Variable").ToString.Equals("load_sht_bs_bal_range") Or
x("Variable").ToString.Equals("load_sht_pl_range") Or
x("Variable").ToString.Equals("load_chk_input_range") Or
x("Variable").ToString.Equals("chk_page_info_range")) .CopyToDataTable]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[in_dtv2023vx]" DisplayName="For Each Row in in_dtv2023vx" sap:VirtualizedContainerService.HintSize="544,469" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
            </ActivityAction.Argument>
            <If Condition="[NOT String.IsNullOrEmpty(CurrentRow(&quot;Worksheet&quot;).ToString.Trim)]" sap:VirtualizedContainerService.HintSize="510,352" sap2010:WorkflowViewState.IdRef="If_7">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_43">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_33">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:String[]">[dictCellRange(CurrentRow("Variable").ToString.Trim)]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:String[]">[{CurrentRow("Worksheet").ToString, CurrentRow("All Scenario").ToString}]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_44">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachRow>
      <TryCatch DisplayName="Try Catch BU Config Detail" sap:VirtualizedContainerService.HintSize="544,665" sap2010:WorkflowViewState.IdRef="TryCatch_15">
        <TryCatch.Variables>
          <Variable x:TypeArguments="sd:DataTable" Name="dtBUConfigDetail" />
        </TryCatch.Variables>
        <TryCatch.Try>
          <Sequence sap:VirtualizedContainerService.HintSize="496,437" sap2010:WorkflowViewState.IdRef="Sequence_41">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_28">
              <Assign.To>
                <OutArgument x:TypeArguments="sd:DataTable">[dtBUConfigDetail]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sd:DataTable">[(From x In in_dtBUConfig.AsEnumerable Where x("submission_bu_code").Equals(docBUCode)).CopyToDataTable]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_23">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[entityValue]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[dtBUConfigDetail.Rows(0)("fccs_entity").ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_29">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[loadStatsOnly]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[dtBUConfigDetail.Rows(0)("load_stats_only").ToString]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="500,21" sap2010:WorkflowViewState.IdRef="Catch`1_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <Sequence sap:VirtualizedContainerService.HintSize="450,201" sap2010:WorkflowViewState.IdRef="Sequence_27">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Throw Exception="[New Exception(&quot;Entity Value is not Found in Configuration File!!&quot;)]" sap:VirtualizedContainerService.HintSize="388,90" sap2010:WorkflowViewState.IdRef="Throw_1" />
              </Sequence>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
    </Sequence>
    <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Set Excel Result Formula " sap:VirtualizedContainerService.HintSize="650,531" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[In_filePath]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do - Set Excel Result Formula" sap:VirtualizedContainerService.HintSize="496,421" sap2010:WorkflowViewState.IdRef="Sequence_55">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="cellIndex" />
              <Variable x:TypeArguments="x:String" Name="cellFormula" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelReadCellFormula Cell="[dictCellRange(&quot;load_sht_hs_set_cell&quot;)(1)]" DisplayName="Read Cell Formula" Formula="[cellFormula]" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="ExcelReadCellFormula_1" SheetName="[dictCellRange(&quot;load_sht_hs_set_cell&quot;)(0)]" />
            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_39">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[cellIndex]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[cellFormula.Substring(cellFormula.IndexOf("HsSetValue(") + "HsSetValue(".Length).Split(",")(0)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ExcelWriteCell Cell="[dictCellRange(&quot;load_sht_validation_formula_range_all&quot;)(1)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="434,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="[dictCellRange(&quot;load_sht_validation_formula_range_all&quot;)(0)]" Text="[&quot;=IF(ISNUMBER(&quot; + dictCellRange(&quot;load_sht_hs_set_cell&quot;)(1) +&quot;),@HsGetValue($B$2,&quot;&quot;&quot; + &quot;Account#&quot;&quot;&quot; + &quot;&amp;$A18,&quot;&quot;&quot; + &quot;Period#&quot;&quot;&quot; + &quot;&amp;S$14,&quot;&quot;&quot; + &quot;Years#&quot;&quot;&quot; + &quot;&amp;S$13,&quot;&quot;&quot; + &quot;Scenario#&quot;&quot;&quot; + &quot;&amp;S$12,&quot;&quot;&quot; + &quot;View#&quot;&quot;&quot; + &quot;&amp;&quot;&quot;&quot; + &quot;FCCS_YTD&quot;&quot;&quot; + &quot;,&quot;&quot;&quot; + &quot;Currency#&quot;&quot;&quot; + &quot;&amp;$B$5,&quot;&quot;&quot; + &quot;Entity#&quot;&quot;&quot; + &quot;&amp;$B$3,&quot;&quot;&quot; + &quot;Intercompany#&quot;&quot;&quot; + &quot;&amp;$H18,&quot;&quot;&quot; + &quot;Movement#&quot;&quot;&quot; + &quot;&amp;$C18,&quot;&quot;&quot; + &quot;Data Source#&quot;&quot;&quot; + &quot;&amp;$G18,&quot;&quot;&quot; + &quot;Consolidation#&quot;&quot;&quot; + &quot;&amp;$B$6,&quot;&quot;&quot; + &quot;Custom1#&quot;&quot;&quot; + &quot;&amp;$D18,&quot;&quot;&quot; + &quot;Custom2#&quot;&quot;&quot; + &quot;&amp;$E18,&quot;&quot;&quot; + &quot;Custom3#&quot;&quot;&quot; + &quot;&amp;$F18,&quot;&quot;&quot; + &quot;Custom4#&quot;&quot;&quot; + &quot;&amp;$B$8)-&quot; + cellIndex +&quot;,&quot;&quot;&quot; + &quot;na&quot;&quot;&quot; + &quot;)&quot;]" />
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="650,6608" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_7" LaunchMethod="Automation" ShowExcelWindow="True">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="616,6521" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_3" ResizeWindow="Maximize" TemplatePath="Data\Template MMR 2023v1.1 cir.xlsx" UseTemplate="True" WorkbookPath="[In_filePath]">
            <ueab:ExcelApplicationCard.Body>
              <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Sequence Use Excel File" sap:VirtualizedContainerService.HintSize="582,6229" sap2010:WorkflowViewState.IdRef="Sequence_147">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Int32" Name="loopIdx" />
                    <Variable x:TypeArguments="sd:DataTable" Name="dtLoadStatOnly" />
                    <Variable x:TypeArguments="x:Int32" Name="idx" />
                    <Variable x:TypeArguments="x:Double" Name="totalLoadBalance" />
                    <Variable x:TypeArguments="x:Double" Name="totalPLBSInput" />
                    <Variable x:TypeArguments="x:Double" Name="totalPLValue" />
                    <Variable x:TypeArguments="x:Double" Name="totalBSBalance" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(dictCellRange(&quot;cover_sht_year_range&quot;)(0)).Cell(dictCellRange(&quot;cover_sht_year_range&quot;)(1))]" DisplayName="Write Cell - Home - Year" sap:VirtualizedContainerService.HintSize="520,159" sap2010:WorkflowViewState.IdRef="WriteCellX_4" Value="[in_currentRow(&quot;Year&quot;).ToString]" />
                  <ueab:WriteCellX Cell="[Excel.Sheet(dictCellRange(&quot;cover_sht_scenario_range&quot;)(0)).Cell(dictCellRange(&quot;cover_sht_scenario_range&quot;)(1))]" DisplayName="Write Cell - Home - Report" sap:VirtualizedContainerService.HintSize="520,159" sap2010:WorkflowViewState.IdRef="WriteCellX_13" Value="[in_currentRow(&quot;Report&quot;).ToString]" />
                  <ueab:WriteCellX Cell="[Excel.Sheet(dictCellRange(&quot;cover_sht_month_range&quot;)(0)).Cell(dictCellRange(&quot;cover_sht_month_range&quot;)(1))]" DisplayName="Write Cell - Home - Month" sap:VirtualizedContainerService.HintSize="520,159" sap2010:WorkflowViewState.IdRef="WriteCellX_5" Value="[in_currentRow(&quot;Month&quot;).ToString]" />
                  <ueab:ReadRangeX DisplayName="Read Range - Home - COB" HasHeaders="False" sap:VirtualizedContainerService.HintSize="520,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_4" Range="[Excel.Sheet(dictCellRange(&quot;cob_lookup_range_in_cover_sht&quot;)(0)).Range(dictCellRange(&quot;cob_lookup_range_in_cover_sht&quot;)(1))]" SaveTo="[dtCoB]" VisibleOnly="False" />
                  <ueab:WriteCellX Cell="[Excel.Sheet(dictCellRange(&quot;app_name_range&quot;)(0)).Cell(dictCellRange(&quot;app_name_range&quot;)(1))]" DisplayName="Write Cell - Load - Application" sap:VirtualizedContainerService.HintSize="520,159" sap2010:WorkflowViewState.IdRef="WriteCellX_6" Value="[dictCellRange(&quot;app_name_value&quot;)(1).ToString]" />
                  <ueab:WriteCellX Cell="[Excel.Sheet(dictCellRange(&quot;fccs_entity_range&quot;)(0)).Cell(dictCellRange(&quot;fccs_entity_range&quot;)(1))]" DisplayName="Write Cell - Load - Entity" sap:VirtualizedContainerService.HintSize="520,159" sap2010:WorkflowViewState.IdRef="WriteCellX_7" Value="[entityValue]" />
                  <ueab:WriteCellX Cell="[Excel.Sheet(dictCellRange(&quot;view_range&quot;)(0)).Cell(dictCellRange(&quot;view_range&quot;)(1))]" DisplayName="Write Cell - Load - View" sap:VirtualizedContainerService.HintSize="520,159" sap2010:WorkflowViewState.IdRef="WriteCellX_8" Value="[dictCellRange(&quot;view_value&quot;)(1).ToString]" />
                  <ueab:WriteCellX Cell="[Excel.Sheet(dictCellRange(&quot;currency_range&quot;)(0)).Cell(dictCellRange(&quot;currency_range&quot;)(1))]" DisplayName="Write Cell - Load - Currency" sap:VirtualizedContainerService.HintSize="520,159" sap2010:WorkflowViewState.IdRef="WriteCellX_9" Value="[dictCellRange(&quot;currency_value&quot;)(1).ToString]" />
                  <ueab:WriteCellX Cell="[Excel.Sheet(dictCellRange(&quot;consolidation_range&quot;)(0)).Cell(dictCellRange(&quot;consolidation_range&quot;)(1))]" DisplayName="Write Cell - Load - Consolidation" sap:VirtualizedContainerService.HintSize="520,159" sap2010:WorkflowViewState.IdRef="WriteCellX_10" Value="[dictCellRange(&quot;consolidation_value&quot;)(1).ToString]" />
                  <ueab:ReadRangeX DisplayName="Read Range Load_Stats_Only" HasHeaders="False" sap:VirtualizedContainerService.HintSize="520,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_3" Range="[Excel.Sheet(dictCellRange(&quot;load_sht_load_stats_only_flag_range&quot;)(0)).Range(dictCellRange(&quot;load_sht_load_stats_only_flag_range&quot;)(1))]" SaveTo="[dtLoadStatOnly]" VisibleOnly="False" />
                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="[idx]" DisplayName="Set New Value for Load Stats Only" sap:VirtualizedContainerService.HintSize="520,356" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[(from dc in dtLoadStatOnly.Columns.Cast(Of DataColumn) Select dc.ColumnName).ToArray()]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="currentItem" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_40">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_30">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[dtLoadStatOnly(0)(idx)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[loadStatsOnly]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                  </ui:ForEach>
                  <ueab:WriteRangeX Destination="[Excel.Sheet(dictCellRange(&quot;load_sht_load_stats_only_flag_range&quot;)(0)).Range(dictCellRange(&quot;load_sht_load_stats_only_flag_range&quot;)(1))]" DisplayName="Write Range - Load - Load Stats Only" ExcludeHeaders="True" sap:VirtualizedContainerService.HintSize="520,159" sap2010:WorkflowViewState.IdRef="WriteRangeX_6" IgnoreEmptySource="False" Source="[dtLoadStatOnly]" />
                  <ui:GenerateDataTable ColumnSizes="{x:Null}" NewLineSeparator="{x:Null}" Positions="{x:Null}" CSVParsing="False" ColumnSeparators="," DataTable="[dtLoadFlag]" DisplayName="Generate Data Table From Text" sap:VirtualizedContainerService.HintSize="520,201" sap2010:WorkflowViewState.IdRef="GenerateDataTable_1" Input="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_load_flag_value&quot;)).Select(Function(y) y(docName))(0).ToString]" />
                  <ueab:WriteRangeX Destination="[Excel.Sheet(dictCellRange(&quot;load_sht_load_flag_range&quot;)(0)).Range(dictCellRange(&quot;load_sht_load_flag_range&quot;)(1))]" DisplayName="Write Range - Load - Load" ExcludeHeaders="True" sap:VirtualizedContainerService.HintSize="520,159" sap2010:WorkflowViewState.IdRef="WriteRangeX_4" IgnoreEmptySource="False" Source="[dtLoadFlag]" />
                  <Sequence DisplayName="Encode VBA Script" sap:VirtualizedContainerService.HintSize="520,464" sap2010:WorkflowViewState.IdRef="Sequence_70">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="readText" />
                      <Variable x:TypeArguments="x:String" Name="encodedFile" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ReadTextFile File="{x:Null}" Content="[readText]" DisplayName="Read Text File" FileName="VBA.txt" sap:VirtualizedContainerService.HintSize="388,80" sap2010:WorkflowViewState.IdRef="ReadTextFile_2" />
                    <ui:Replace sap:VirtualizedContainerService.HintSize="388,60" sap2010:WorkflowViewState.IdRef="Replace_2" Input="[readText]" IsBuilderTabModified="False" Pattern="\r" RegexOption="IgnoreCase, Compiled" Replacement=" " Result="[encodedFile]" />
                    <ui:WriteTextFile File="{x:Null}" DisplayName="Write Text File" FileName="FinalVBA.txt" sap:VirtualizedContainerService.HintSize="388,133" sap2010:WorkflowViewState.IdRef="WriteTextFile_2" Text="[encodedFile]" />
                  </Sequence>
                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="[loopIdx]" DisplayName="For Each - COB" sap:VirtualizedContainerService.HintSize="520,1558" sap2010:WorkflowViewState.IdRef="ForEach`1_14" Values="[(From dc In dtCoB.Columns.Cast(Of DataColumn) Select dc.ColumnName).ToArray().Where(Function(x) Not String.IsNullOrEmpty(dtCoB.Rows(0)(x).ToString)).ToArray]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="currentItem" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="486,1372" sap2010:WorkflowViewState.IdRef="Sequence_143">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="sd:DataTable" Name="dtFormulaResult" />
                            <Variable x:TypeArguments="x:String" Name="FormulaResult" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ueab:WriteCellX AutoIncrementRow="True" Cell="[Excel.Sheet(dictCellRange(&quot;cob_range&quot;)(0)).Cell(dictCellRange(&quot;cob_range&quot;)(1))]" DisplayName="Write Cell - Load - COB" sap:VirtualizedContainerService.HintSize="444,159" sap2010:WorkflowViewState.IdRef="WriteCellX_15" Value="[dtCoB.Rows(0)(currentItem).ToString]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ueab:WriteCellX>
                          <If Condition="[loopIdx = 0]" sap:VirtualizedContainerService.HintSize="444,534" sap2010:WorkflowViewState.IdRef="If_25">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="376,176" sap2010:WorkflowViewState.IdRef="Sequence_130">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="FinalVBA.txt" DisplayName="Invoke VBA" EntryMethodName="Calling_Procedure" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_3" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="376,176" sap2010:WorkflowViewState.IdRef="Sequence_131">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="FinalVBA.txt" DisplayName="Invoke VBA" EntryMethodName="Calling_Procedure2" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_4" />
                              </Sequence>
                            </If.Else>
                          </If>
                          <ueab:ReadRangeX DisplayName="Read Range Formula Result" HasHeaders="False" sap:VirtualizedContainerService.HintSize="444,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_16" Range="[Excel.Sheet(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_validation_formula_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString).Range(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_validation_formula_range&quot;)).Select(Function(y) y(docName))(0).ToString)]" SaveTo="[dtFormulaResult]" VisibleOnly="False">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ueab:ReadRangeX>
                          <ui:OutputDataTable DataTable="[dtFormulaResult]" DisplayName="Convert Result from DT to Text" sap:VirtualizedContainerService.HintSize="444,80" sap2010:WorkflowViewState.IdRef="OutputDataTable_5" Text="[FormulaResult]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:OutputDataTable>
                          <If Condition="[Not FormulaResult.Replace(&quot;Column0&quot;,&quot;&quot;).Contains(&quot;0&quot;)]" DisplayName="Check If Result contain 0 or Not" sap:VirtualizedContainerService.HintSize="444,182" sap2010:WorkflowViewState.IdRef="If_26">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="614,7348" sap2010:WorkflowViewState.IdRef="Sequence_125">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="loadBalanceValue" />
                                  <Variable x:TypeArguments="x:String" Name="BSBalanceValue" />
                                  <Variable x:TypeArguments="sd:DataTable" Name="dtPLBSInput" />
                                  <Variable x:TypeArguments="x:Double" Name="PLBSInput" />
                                  <Variable x:TypeArguments="x:String" Name="informationCheckRange" />
                                  <Variable x:TypeArguments="x:String" Name="chkItemNameRange" />
                                  <Variable x:TypeArguments="sd:DataTable" Name="dtChkItemName" />
                                  <Variable x:TypeArguments="sd:DataTable" Name="dtLoadBalance" />
                                  <Variable x:TypeArguments="sd:DataTable" Name="dtBSBalance" />
                                  <Variable x:TypeArguments="x:Double" Name="LoadBalance" />
                                  <Variable x:TypeArguments="x:Double" Name="BSBalance" />
                                  <Variable x:TypeArguments="sd:DataTable" Name="dtPLValue" />
                                  <Variable x:TypeArguments="x:Double" Name="PLValue" />
                                  <Variable x:TypeArguments="s:String[]" Name="loadFlag" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If Condition="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_bs_bal_range&quot;)).Select(Function(y) y(docName))(0).ToString.Contains(&quot;:&quot;)]" DisplayName="Condition for BS Balance - Load Page" sap:VirtualizedContainerService.HintSize="572,903" sap2010:WorkflowViewState.IdRef="If_27">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="486,382" sap2010:WorkflowViewState.IdRef="Sequence_132">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ueab:ReadRangeX DisplayName="Read Range - Load Balance" HasHeaders="False" sap:VirtualizedContainerService.HintSize="444,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_19" Range="[Excel.Sheet(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_bs_bal_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString).Range(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_bs_bal_range&quot;)).Select(Function(y) y(docName))(0).ToString)]" SaveTo="[dtLoadBalance]" />
                                      <Assign DisplayName="Sum Total Load Balance" sap:VirtualizedContainerService.HintSize="444,85" sap2010:WorkflowViewState.IdRef="Assign_72">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Double">[LoadBalance]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Double" xml:space="preserve">[(From d In dtLoadBalance.AsEnumerable() 
Where (Not String.IsNullOrWhiteSpace(d(0).ToString.Trim) And Not d(0).ToString.Trim.Equals("-")) 
Select v = CDbl(d(0).ToString.Trim)).Sum(Function(x) x)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap:VirtualizedContainerService.HintSize="486,339" sap2010:WorkflowViewState.IdRef="Sequence_133">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ueab:ReadCellValueX Cell="[Excel.Sheet(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_bs_bal_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString).Cell(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_bs_bal_range&quot;)).Select(Function(y) y(docName))(0).ToString)]" DisplayName="Read Cell Value - Load Balance" GetFormattedText="False" sap:VirtualizedContainerService.HintSize="444,159" sap2010:WorkflowViewState.IdRef="ReadCellValueX_9">
                                        <ueab:ReadCellValueX.SaveTo>
                                          <OutArgument x:TypeArguments="x:Double">[LoadBalance]</OutArgument>
                                        </ueab:ReadCellValueX.SaveTo>
                                      </ueab:ReadCellValueX>
                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="444,52" sap2010:WorkflowViewState.IdRef="CommentOut_31">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_184">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_73">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Double">[LoadBalance]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Double">[CDbl(loadBalanceValue)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CommentOut>
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <Assign sap:VirtualizedContainerService.HintSize="572,81" sap2010:WorkflowViewState.IdRef="Assign_74">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Double">[totalLoadBalance]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Double">[totalLoadBalance + LoadBalance]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <If Condition="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;total_bs_bal_in_input_range&quot;)).Select(Function(y) y(docName))(0).ToString.Contains(&quot;:&quot;)]" DisplayName="Condition for BS Balance - BS Page" sap:VirtualizedContainerService.HintSize="572,903" sap2010:WorkflowViewState.IdRef="If_28">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="486,382" sap2010:WorkflowViewState.IdRef="Sequence_134">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ueab:ReadRangeX DisplayName="Read Range - BS Balance" HasHeaders="False" sap:VirtualizedContainerService.HintSize="444,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_20" Range="[Excel.Sheet(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;total_bs_bal_in_input_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString).Range(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;total_bs_bal_in_input_range&quot;)).Select(Function(y) y(docName))(0).ToString)]" SaveTo="[dtBSBalance]" />
                                      <Assign DisplayName="Sum Total BS Balance" sap:VirtualizedContainerService.HintSize="444,85" sap2010:WorkflowViewState.IdRef="Assign_75">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Double">[BSBalance]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Double" xml:space="preserve">[(From d In dtBSBalance.AsEnumerable() 
Where (Not String.IsNullOrWhiteSpace(d(0).ToString.Trim) And Not d(0).ToString.Trim.Equals("-")) 
Select v = CDbl(d(0).ToString.Trim)).Sum(Function(x) x)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap:VirtualizedContainerService.HintSize="486,339" sap2010:WorkflowViewState.IdRef="Sequence_135">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ueab:ReadCellValueX Cell="[Excel.Sheet(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;total_bs_bal_in_input_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString).Cell(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;total_bs_bal_in_input_range&quot;)).Select(Function(y) y(docName))(0).ToString)]" DisplayName="Read Cell Value - Load Balance" GetFormattedText="False" sap:VirtualizedContainerService.HintSize="444,159" sap2010:WorkflowViewState.IdRef="ReadCellValueX_10">
                                        <ueab:ReadCellValueX.SaveTo>
                                          <OutArgument x:TypeArguments="x:Double">[BSBalance]</OutArgument>
                                        </ueab:ReadCellValueX.SaveTo>
                                      </ueab:ReadCellValueX>
                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="444,52" sap2010:WorkflowViewState.IdRef="CommentOut_32">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_185">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_76">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Double">[BSBalance]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Double">[CDbl(BSBalanceValue)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CommentOut>
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <Assign sap:VirtualizedContainerService.HintSize="572,81" sap2010:WorkflowViewState.IdRef="Assign_77">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Double">[totalBSBalance]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Double">[totalBSBalance + BSBalance]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <If Condition="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_chk_input_range&quot;)).Select(Function(y) y(docName))(0).ToString.Contains(&quot;:&quot;)]" DisplayName="Condition for PL/BS - Load Page" sap:VirtualizedContainerService.HintSize="572,932" sap2010:WorkflowViewState.IdRef="If_29">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="486,382" sap2010:WorkflowViewState.IdRef="Sequence_136">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ueab:ReadRangeX DisplayName="Read Range - PL/BS" HasHeaders="False" sap:VirtualizedContainerService.HintSize="444,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_21" Range="[Excel.Sheet(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_chk_input_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString).Range(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_chk_input_range&quot;)).Select(Function(y) y(docName))(0).ToString)]" SaveTo="[dtPLBSInput]" />
                                      <Assign DisplayName="Sum Total PL/BS" sap:VirtualizedContainerService.HintSize="444,85" sap2010:WorkflowViewState.IdRef="Assign_78">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Double">[PLBSInput]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Double" xml:space="preserve">[(From d In dtPLBSInput.AsEnumerable() 
Where (Not String.IsNullOrWhiteSpace(d(0).ToString.Trim) And Not d(0).ToString.Trim.Equals("-")) 
Select v = CDbl(d(0).ToString.Trim)).Sum(Function(x) x)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap:VirtualizedContainerService.HintSize="486,368" sap2010:WorkflowViewState.IdRef="Sequence_126">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:String" Name="PLBSInputValue" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ueab:ReadCellValueX Cell="[Excel.Sheet(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_chk_input_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString).Cell(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_chk_input_range&quot;)).Select(Function(y) y(docName))(0).ToString)]" DisplayName="Read Cell Value - Load Balance" GetFormattedText="False" sap:VirtualizedContainerService.HintSize="444,159" sap2010:WorkflowViewState.IdRef="ReadCellValueX_11">
                                        <ueab:ReadCellValueX.SaveTo>
                                          <OutArgument x:TypeArguments="x:Double">[PLBSInput]</OutArgument>
                                        </ueab:ReadCellValueX.SaveTo>
                                      </ueab:ReadCellValueX>
                                      <Assign sap:VirtualizedContainerService.HintSize="444,81" sap2010:WorkflowViewState.IdRef="Assign_79">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Double">[PLBSInput]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Double">[CDbl(PLBSInputValue)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <Sequence DisplayName="Set Report Total PL/BS - Load Page" sap:VirtualizedContainerService.HintSize="572,297" sap2010:WorkflowViewState.IdRef="Sequence_137">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Path.GetFileName(In_filePath), dtCoB.Rows(0)(currentItem) , &quot;Check to PL/BS&quot;, PLBSInput.ToString}]" DataTable="[In_Out_dtReportPLBSInput]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="388,186" sap2010:WorkflowViewState.IdRef="AddDataRow_16" />
                                </Sequence>
                                <Sequence DisplayName="Process Check Sheet" sap:VirtualizedContainerService.HintSize="572,2533" sap2010:WorkflowViewState.IdRef="Sequence_127">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="sd:DataTable" Name="dtChkItemValue" />
                                    <Variable x:TypeArguments="sc:IEnumerable" Name="filteredDT" />
                                    <Variable x:TypeArguments="sd:DataTable" Name="dtInfoIncomplete" />
                                    <Variable x:TypeArguments="x:String" Default="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;chk_page_info_range&quot;)).Select(Function(y) y(docName))(0).ToString]" Name="chkPageChkRange" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Get Check Item Name Range" sap:VirtualizedContainerService.HintSize="510,81" sap2010:WorkflowViewState.IdRef="Assign_80">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[ChkItemNameRange]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[New String(chkPageChkRange.Select(Function(c) If(Char.IsLetter(c), "A"c, c)).ToArray())]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="510,81" sap2010:WorkflowViewState.IdRef="Assign_81">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[chkPageName]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[dtScenarioValue.AsEnumerable().Where(Function(x) x("Variable").Equals("load_chk_input_range")).Select(Function(y) y("Worksheet"))(0).ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ueab:ReadRangeX DisplayName="Read check item name dt" sap:VirtualizedContainerService.HintSize="510,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_17" Range="[Excel.Sheet(chkPageName).Range(ChkItemNameRange)]" SaveTo="[dtChkItemName]" VisibleOnly="False">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ueab:ReadRangeX>
                                  <ueab:ReadRangeX DisplayName="Read check item value" sap:VirtualizedContainerService.HintSize="510,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_18" Range="[Excel.Sheet(chkPageName).Range(chkPageChkRange)]" SaveTo="[dtChkItemValue]" VisibleOnly="False">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ueab:ReadRangeX>
                                  <Assign DisplayName="Filter check value dt" sap:VirtualizedContainerService.HintSize="510,85" sap2010:WorkflowViewState.IdRef="Assign_82">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="sc:IEnumerable">[filteredDT]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="sc:IEnumerable" xml:space="preserve">[(From row In dtChkItemValue.AsEnumerable()
                From column In dtChkItemValue.Columns.Cast(Of DataColumn)()
                Where row(column) IsNot DBNull.Value AndAlso (row(column).ToString() = "Info Incomplete" OrElse row(column).ToString() = "Incomplete Info")
                Select New With
                {
                    .Index = dtChkItemValue.Rows.IndexOf(row),
                    .ColumnHeader = column.ColumnName
                })]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:BuildDataTable DataTable="[dtInfoIncomplete]" DisplayName="Create Output DataTable" sap:VirtualizedContainerService.HintSize="510,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_3" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Index&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Period&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Item&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName /&gt;&#xA;&lt;/NewDataSet&gt;" />
                                  <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="510,815" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[filteredDT]">
                                    <ui:ForEach.Body>
                                      <ActivityAction x:TypeArguments="x:Object">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:Object" Name="currentItem" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476,629" sap2010:WorkflowViewState.IdRef="Sequence_128">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dict" />
                                            <Variable x:TypeArguments="x:String" Name="ItemStr" />
                                            <Variable x:TypeArguments="sd:DataRow" Name="drNewRow" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_83">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[ItemStr]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[currentItem.ToString.replace("{ Index = ","").replace(" ColumnHeader = ","").replace(" }","")]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:MultipleAssign DisplayName="Fill up new row info" sap:VirtualizedContainerService.HintSize="434,194" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                                            <ui:MultipleAssign.AssignOperations>
                                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="sd:DataRow">[dtInfoIncomplete.NewRow()]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Object">[drNewRow("Index")]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[Int32.Parse(currentItem.ToString.replace("{ Index = ","").replace(" ColumnHeader = ","").replace(" }","").split(",")(0).trim())]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Object">[drNewRow("Period")]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">[currentItem.ToString.replace("{ Index = ","").replace(" ColumnHeader = ","").replace(" }","").split(",")(1).Trim()]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Object">[drNewRow("Item")]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:Object">[dtChkItemName.Rows(Int32.Parse(currentItem.ToString.replace("{ Index = ","").replace(" ColumnHeader = ","").replace(" }","").split(",")(0).trim()))(0)]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                              </scg:List>
                                            </ui:MultipleAssign.AssignOperations>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:MultipleAssign>
                                          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtInfoIncomplete]" DisplayName="Attach new row to output dt" sap:VirtualizedContainerService.HintSize="434,186" sap2010:WorkflowViewState.IdRef="AddDataRow_17">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:AddDataRow>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ForEach.Body>
                                  </ui:ForEach>
                                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtInfoIncomplete]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="510,682" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
                                    <ui:ForEachRow.Body>
                                      <ActivityAction x:TypeArguments="sd:DataRow">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="472,567" sap2010:WorkflowViewState.IdRef="Sequence_140">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If Condition="[Not String.IsNullOrWhiteSpace(CurrentRow(0).ToString)]" sap:VirtualizedContainerService.HintSize="410,456" sap2010:WorkflowViewState.IdRef="If_30">
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="376,274" sap2010:WorkflowViewState.IdRef="Sequence_138">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{docName, dtCoB.Rows(0)(currentItem) , CurrentRow.ToString, &quot;&quot;}]" DataTable="[In_Out_dtReportCheckSummary]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,186" sap2010:WorkflowViewState.IdRef="AddDataRow_18" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_139">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ForEachRow.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ForEachRow>
                                </Sequence>
                                <If Condition="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_pl_range&quot;)).Select(Function(y) y(docName))(0).ToString.Contains(&quot;:&quot;)]" DisplayName="Condition for PL - Load Page" sap:VirtualizedContainerService.HintSize="572,903" sap2010:WorkflowViewState.IdRef="If_31">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="486,382" sap2010:WorkflowViewState.IdRef="Sequence_141">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ueab:ReadRangeX DisplayName="Read Range - PL" HasHeaders="False" sap:VirtualizedContainerService.HintSize="444,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_22" Range="[Excel.Sheet(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_pl_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString).Range(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_pl_range&quot;)).Select(Function(y) y(docName))(0).ToString)]" SaveTo="[dtPLValue]" />
                                      <Assign DisplayName="Sum Total PL" sap:VirtualizedContainerService.HintSize="444,85" sap2010:WorkflowViewState.IdRef="Assign_84">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Double">[PLValue]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Double" xml:space="preserve">[(From d In dtPLValue.AsEnumerable() 
Where (Not String.IsNullOrWhiteSpace(d(0).ToString.Trim) And Not d(0).ToString.Trim.Equals("-")) 
Select v = CDbl(d(0).ToString.Trim)).Sum(Function(x) x)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap:VirtualizedContainerService.HintSize="486,339" sap2010:WorkflowViewState.IdRef="Sequence_129">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:String" Name="PLValueStr" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ueab:ReadCellValueX Cell="[Excel.Sheet(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_pl_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString).Cell(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_pl_range&quot;)).Select(Function(y) y(docName))(0).ToString)]" DisplayName="Read Cell Value - Load Balance" GetFormattedText="False" sap:VirtualizedContainerService.HintSize="444,159" sap2010:WorkflowViewState.IdRef="ReadCellValueX_12">
                                        <ueab:ReadCellValueX.SaveTo>
                                          <OutArgument x:TypeArguments="x:Double">[PLValue]</OutArgument>
                                        </ueab:ReadCellValueX.SaveTo>
                                      </ueab:ReadCellValueX>
                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="444,52" sap2010:WorkflowViewState.IdRef="CommentOut_33">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_186">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_85">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Double">[PLValue]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Double">[CDbl(PLValueStr)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CommentOut>
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <Assign sap:VirtualizedContainerService.HintSize="572,81" sap2010:WorkflowViewState.IdRef="Assign_86">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Double">[totalPLValue]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Double">[totalPLValue + PLValue]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Path.GetFileName(In_filePath), dtCoB.Rows(0)(currentItem), &quot;Success&quot;, &quot;&quot;}]" DataTable="[in_out_dtProcessResult]" DisplayName="Add Data Row Process Result" sap:VirtualizedContainerService.HintSize="572,186" sap2010:WorkflowViewState.IdRef="AddDataRow_19" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="376,274" sap2010:WorkflowViewState.IdRef="Sequence_142">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Path.GetFileName(In_filePath), dtCoB.Rows(0)(currentItem), &quot;Failed&quot;, &quot;Formula Result is 0&quot;}]" DataTable="[in_out_dtProcessResult]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,186" sap2010:WorkflowViewState.IdRef="AddDataRow_20" />
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                  <Sequence DisplayName="Set Report Total BS Balance - Load Page" sap:VirtualizedContainerService.HintSize="520,297" sap2010:WorkflowViewState.IdRef="Sequence_195">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Path.GetFileName(In_filePath), &quot;All&quot;, &quot;Total BS Bal (&lt;&quot; + dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_bs_bal_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString + &quot;&gt; page)&quot;, totalLoadBalance.ToString}]" DataTable="[In_Out_dtReportLoadBalance]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="388,186" sap2010:WorkflowViewState.IdRef="AddDataRow_21" />
                  </Sequence>
                  <Sequence DisplayName="Set Report Total BS Balance - BS Page" sap:VirtualizedContainerService.HintSize="520,297" sap2010:WorkflowViewState.IdRef="Sequence_196">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Path.GetFileName(In_filePath), &quot;All&quot;, &quot;Total BS Bal (&lt;&quot; + dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;total_bs_bal_in_input_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString + &quot;&gt; page)&quot;, totalBSBalance.ToString}]" DataTable="[In_Out_dtReportBSBalance]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="388,186" sap2010:WorkflowViewState.IdRef="AddDataRow_22" />
                  </Sequence>
                  <Sequence DisplayName="Set Report Total PL - Load Page" sap:VirtualizedContainerService.HintSize="520,297" sap2010:WorkflowViewState.IdRef="Sequence_197">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Path.GetFileName(In_filePath), &quot;All&quot;, &quot;Total PL&quot;, totalPLValue.ToString}]" DataTable="[In_Out_dtReportSumLoad]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="388,186" sap2010:WorkflowViewState.IdRef="AddDataRow_23" />
                  </Sequence>
                </Sequence>
              </ActivityAction>
            </ueab:ExcelApplicationCard.Body>
          </ueab:ExcelApplicationCard>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ueab:ExcelProcessScopeX>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="650,52" sap2010:WorkflowViewState.IdRef="CommentOut_39">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="882,10364" sap2010:WorkflowViewState.IdRef="Sequence_198">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="820,10253" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_8" InstanceCachePeriod="3000" WorkbookPath="[In_filePath]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Process Data All COB" sap:VirtualizedContainerService.HintSize="786,10143" sap2010:WorkflowViewState.IdRef="Sequence_124">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Int32" Name="loopIdx" />
                    <Variable x:TypeArguments="x:Double" Name="totalLoadBalance" />
                    <Variable x:TypeArguments="x:Double" Name="totalBSBalance" />
                    <Variable x:TypeArguments="x:Double" Name="totalPLValue" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="[loopIdx]" DisplayName="For Each - COB" sap:VirtualizedContainerService.HintSize="724,9021" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[(From dc In dtCoB.Columns.Cast(Of DataColumn) Select dc.ColumnName).ToArray().Where(Function(x) Not String.IsNullOrEmpty(dtCoB.Rows(0)(x).ToString)).ToArray]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="currentItem" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="690,8835" sap2010:WorkflowViewState.IdRef="Sequence_100">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="sd:DataTable" Name="dtFormulaResult" />
                            <Variable x:TypeArguments="x:String" Name="FormulaResult" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExcelWriteCell Cell="[dictCellRange(&quot;cob_range&quot;)(1).ToString]" DisplayName="Write Cell - Load - COB" sap:VirtualizedContainerService.HintSize="648,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="[dictCellRange(&quot;cob_range&quot;)(0).ToString]" Text="[dtCoB.Rows(0)(currentItem).ToString]" />
                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="648,52" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                            <ui:CommentOut.Body>
                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,270" sap2010:WorkflowViewState.IdRef="Sequence_149">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ueab:WriteCellX Cell="[Excel.Sheet(dictCellRange(&quot;cob_range&quot;)(0)).Cell(dictCellRange(&quot;cob_range&quot;)(1))]" DisplayName="Write Cell - Load - COB" sap:VirtualizedContainerService.HintSize="434,159" sap2010:WorkflowViewState.IdRef="WriteCellX_16" Value="[dtCoB.Rows(0)(currentItem).ToString]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ueab:WriteCellX>
                              </Sequence>
                            </ui:CommentOut.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:CommentOut>
                          <If Condition="[loopIdx = 0]" sap:VirtualizedContainerService.HintSize="648,534" sap2010:WorkflowViewState.IdRef="If_19">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="376,176" sap2010:WorkflowViewState.IdRef="Sequence_95">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="FinalVBA.txt" DisplayName="Invoke VBA" EntryMethodName="Calling_Procedure" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_1" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="376,176" sap2010:WorkflowViewState.IdRef="Sequence_97">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="FinalVBA.txt" DisplayName="Invoke VBA" EntryMethodName="Calling_Procedure2" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_2" />
                              </Sequence>
                            </If.Else>
                          </If>
                          <ui:ExcelReadRange AddHeaders="False" DataTable="[dtFormulaResult]" DisplayName="Read Range Formula Result" sap:VirtualizedContainerService.HintSize="648,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" Range="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_validation_formula_range&quot;)).Select(Function(y) y(docName))(0).ToString]" SheetName="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_validation_formula_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString]" />
                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="648,52" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                            <ui:CommentOut.Body>
                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="506,280" sap2010:WorkflowViewState.IdRef="Sequence_150">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ueab:ReadRangeX DisplayName="Read Range Formula Result" HasHeaders="False" sap:VirtualizedContainerService.HintSize="444,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_9" Range="[Excel.Sheet(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_validation_formula_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString).Range(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_validation_formula_range&quot;)).Select(Function(y) y(docName))(0).ToString)]" SaveTo="[dtFormulaResult]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ueab:ReadRangeX>
                              </Sequence>
                            </ui:CommentOut.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:CommentOut>
                          <ui:OutputDataTable DataTable="[dtFormulaResult]" DisplayName="Convert Result from DT to Text" sap:VirtualizedContainerService.HintSize="648,80" sap2010:WorkflowViewState.IdRef="OutputDataTable_4" Text="[FormulaResult]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:OutputDataTable>
                          <If Condition="[Not FormulaResult.Replace(&quot;Column0&quot;,&quot;&quot;).Contains(&quot;0&quot;)]" DisplayName="Check If Result contain 0 or Not" sap:VirtualizedContainerService.HintSize="648,7641" sap2010:WorkflowViewState.IdRef="If_16">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="614,7185" sap2010:WorkflowViewState.IdRef="Sequence_90">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="loadBalanceValue" />
                                  <Variable x:TypeArguments="x:String" Name="BSBalanceValue" />
                                  <Variable x:TypeArguments="sd:DataTable" Name="dtPLBSInput" />
                                  <Variable x:TypeArguments="x:Double" Name="PLBSInput" />
                                  <Variable x:TypeArguments="x:String" Name="informationCheckRange" />
                                  <Variable x:TypeArguments="x:String" Name="chkItemNameRange" />
                                  <Variable x:TypeArguments="x:String" Default="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;chk_page_info_range&quot;)).Select(Function(y) y(docName))(0).ToString]" Name="chkPageChkRange" />
                                  <Variable x:TypeArguments="sd:DataTable" Name="dtChkItemName" />
                                  <Variable x:TypeArguments="sd:DataTable" Name="dtLoadBalance" />
                                  <Variable x:TypeArguments="sd:DataTable" Name="dtBSBalance" />
                                  <Variable x:TypeArguments="x:Double" Name="LoadBalance" />
                                  <Variable x:TypeArguments="x:Double" Name="BSBalance" />
                                  <Variable x:TypeArguments="sd:DataTable" Name="dtPLValue" />
                                  <Variable x:TypeArguments="x:Double" Name="PLValue" />
                                  <Variable x:TypeArguments="s:String[]" Name="loadFlag" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If Condition="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_bs_bal_range&quot;)).Select(Function(y) y(docName))(0).ToString.Contains(&quot;:&quot;)]" DisplayName="Condition for BS Balance - Load Page" sap:VirtualizedContainerService.HintSize="572,877" sap2010:WorkflowViewState.IdRef="If_21">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="476,363" sap2010:WorkflowViewState.IdRef="Sequence_114">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelReadRange AddHeaders="False" DataTable="[dtLoadBalance]" DisplayName="Read Range - Load Balance" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" Range="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_bs_bal_range&quot;)).Select(Function(y) y(docName))(0).ToString]" SheetName="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_bs_bal_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString]" />
                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="CommentOut_4">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="506,280" sap2010:WorkflowViewState.IdRef="Sequence_151">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ueab:ReadRangeX DisplayName="Read Range - Load Balance" HasHeaders="False" sap:VirtualizedContainerService.HintSize="444,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_13" Range="[Excel.Sheet(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_bs_bal_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString).Range(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_bs_bal_range&quot;)).Select(Function(y) y(docName))(0).ToString)]" SaveTo="[dtLoadBalance]" />
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CommentOut>
                                      <Assign DisplayName="Sum Total Load Balance" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_54">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Double">[LoadBalance]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Double" xml:space="preserve">[(From d In dtLoadBalance.AsEnumerable() 
Where (Not String.IsNullOrWhiteSpace(d(0).ToString.Trim) And Not d(0).ToString.Trim.Equals("-")) 
Select v = CDbl(d(0).ToString.Trim)).Sum(Function(x) x)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap:VirtualizedContainerService.HintSize="376,332" sap2010:WorkflowViewState.IdRef="Sequence_115">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelReadCell Cell="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_bs_bal_range&quot;)).Select(Function(y) y(docName))(0).ToString]" DisplayName="Read Cell Value - Load Balance" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_bs_bal_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString]">
                                        <ui:ExcelReadCell.Result>
                                          <OutArgument x:TypeArguments="x:Double">[LoadBalance]</OutArgument>
                                        </ui:ExcelReadCell.Result>
                                      </ui:ExcelReadCell>
                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="CommentOut_5">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="506,270" sap2010:WorkflowViewState.IdRef="Sequence_152">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ueab:ReadCellValueX Cell="[Excel.Sheet(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_bs_bal_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString).Cell(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_bs_bal_range&quot;)).Select(Function(y) y(docName))(0).ToString)]" DisplayName="Read Cell Value - Load Balance" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="444,159" sap2010:WorkflowViewState.IdRef="ReadCellValueX_5">
                                              <ueab:ReadCellValueX.SaveTo>
                                                <OutArgument x:TypeArguments="x:String">[loadBalanceValue]</OutArgument>
                                              </ueab:ReadCellValueX.SaveTo>
                                            </ueab:ReadCellValueX>
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CommentOut>
                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="CommentOut_27">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_180">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_68">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Double">[LoadBalance]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Double">[CDbl(loadBalanceValue)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CommentOut>
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <Assign sap:VirtualizedContainerService.HintSize="572,82" sap2010:WorkflowViewState.IdRef="Assign_57">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Double">[totalLoadBalance]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Double">[totalLoadBalance + LoadBalance]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <If Condition="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;total_bs_bal_in_input_range&quot;)).Select(Function(y) y(docName))(0).ToString.Contains(&quot;:&quot;)]" DisplayName="Condition for BS Balance - BS Page" sap:VirtualizedContainerService.HintSize="572,877" sap2010:WorkflowViewState.IdRef="If_22">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="476,363" sap2010:WorkflowViewState.IdRef="Sequence_116">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelReadRange AddHeaders="False" DataTable="[dtBSBalance]" DisplayName="Read Range - BS Balance" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" Range="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;total_bs_bal_in_input_range&quot;)).Select(Function(y) y(docName))(0).ToString]" SheetName="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;total_bs_bal_in_input_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString]" />
                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="506,280" sap2010:WorkflowViewState.IdRef="Sequence_153">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ueab:ReadRangeX DisplayName="Read Range - BS Balance" HasHeaders="False" sap:VirtualizedContainerService.HintSize="444,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_14" Range="[Excel.Sheet(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;total_bs_bal_in_input_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString).Range(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;total_bs_bal_in_input_range&quot;)).Select(Function(y) y(docName))(0).ToString)]" SaveTo="[dtBSBalance]" />
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CommentOut>
                                      <Assign DisplayName="Sum Total BS Balance" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_55">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Double">[BSBalance]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Double" xml:space="preserve">[(From d In dtBSBalance.AsEnumerable() 
Where (Not String.IsNullOrWhiteSpace(d(0).ToString.Trim) And Not d(0).ToString.Trim.Equals("-")) 
Select v = CDbl(d(0).ToString.Trim)).Sum(Function(x) x)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap:VirtualizedContainerService.HintSize="376,332" sap2010:WorkflowViewState.IdRef="Sequence_117">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelReadCell Cell="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;total_bs_bal_in_input_range&quot;)).Select(Function(y) y(docName))(0).ToString]" DisplayName="Read Cell Value - Load Balance" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_2" SheetName="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;total_bs_bal_in_input_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString]">
                                        <ui:ExcelReadCell.Result>
                                          <OutArgument x:TypeArguments="x:Double">[BSBalance]</OutArgument>
                                        </ui:ExcelReadCell.Result>
                                      </ui:ExcelReadCell>
                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="CommentOut_7">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="506,270" sap2010:WorkflowViewState.IdRef="Sequence_154">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ueab:ReadCellValueX Cell="[Excel.Sheet(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;total_bs_bal_in_input_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString).Cell(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;total_bs_bal_in_input_range&quot;)).Select(Function(y) y(docName))(0).ToString)]" DisplayName="Read Cell Value - Load Balance" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="444,159" sap2010:WorkflowViewState.IdRef="ReadCellValueX_6">
                                              <ueab:ReadCellValueX.SaveTo>
                                                <OutArgument x:TypeArguments="x:String">[BSBalanceValue]</OutArgument>
                                              </ueab:ReadCellValueX.SaveTo>
                                            </ueab:ReadCellValueX>
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CommentOut>
                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="CommentOut_28">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_181">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_69">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Double">[BSBalance]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Double">[CDbl(BSBalanceValue)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CommentOut>
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <Assign sap:VirtualizedContainerService.HintSize="572,82" sap2010:WorkflowViewState.IdRef="Assign_58">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Double">[totalBSBalance]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Double">[totalBSBalance + BSBalance]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <If Condition="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_chk_input_range&quot;)).Select(Function(y) y(docName))(0).ToString.Contains(&quot;:&quot;)]" DisplayName="Condition for PL/BS - Load Page" sap:VirtualizedContainerService.HintSize="572,877" sap2010:WorkflowViewState.IdRef="If_23">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="476,363" sap2010:WorkflowViewState.IdRef="Sequence_118">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelReadRange AddHeaders="False" DataTable="[dtPLBSInput]" DisplayName="Read Range - PL/BS" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_4" Range="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_chk_input_range&quot;)).Select(Function(y) y(docName))(0).ToString]" SheetName="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_chk_input_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString]" />
                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="CommentOut_8">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="506,280" sap2010:WorkflowViewState.IdRef="Sequence_155">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ueab:ReadRangeX DisplayName="Read Range - PL/BS" HasHeaders="False" sap:VirtualizedContainerService.HintSize="444,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_10" Range="[Excel.Sheet(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_chk_input_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString).Range(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_chk_input_range&quot;)).Select(Function(y) y(docName))(0).ToString)]" SaveTo="[dtPLBSInput]" />
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CommentOut>
                                      <Assign DisplayName="Sum Total PL/BS" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_49">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Double">[PLBSInput]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Double" xml:space="preserve">[(From d In dtPLBSInput.AsEnumerable() 
Where (Not String.IsNullOrWhiteSpace(d(0).ToString.Trim) And Not d(0).ToString.Trim.Equals("-")) 
Select v = CDbl(d(0).ToString.Trim)).Sum(Function(x) x)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap:VirtualizedContainerService.HintSize="376,332" sap2010:WorkflowViewState.IdRef="Sequence_119">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:String" Name="PLBSInputValue" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelReadCell Cell="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_chk_input_range&quot;)).Select(Function(y) y(docName))(0).ToString]" DisplayName="Read Cell Value - PL/BS" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_3" SheetName="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_chk_input_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString]">
                                        <ui:ExcelReadCell.Result>
                                          <OutArgument x:TypeArguments="x:Double">[PLBSInput]</OutArgument>
                                        </ui:ExcelReadCell.Result>
                                      </ui:ExcelReadCell>
                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="CommentOut_9">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="506,270" sap2010:WorkflowViewState.IdRef="Sequence_156">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ueab:ReadCellValueX Cell="[Excel.Sheet(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_chk_input_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString).Cell(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_chk_input_range&quot;)).Select(Function(y) y(docName))(0).ToString)]" DisplayName="Read Cell Value - PL/BS" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="444,159" sap2010:WorkflowViewState.IdRef="ReadCellValueX_7">
                                              <ueab:ReadCellValueX.SaveTo>
                                                <OutArgument x:TypeArguments="x:String">[PLBSInputValue]</OutArgument>
                                              </ueab:ReadCellValueX.SaveTo>
                                            </ueab:ReadCellValueX>
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CommentOut>
                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="CommentOut_29">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_182">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_70">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Double">[PLBSInput]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Double">[CDbl(PLBSInputValue)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CommentOut>
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <Sequence DisplayName="Set Report Total PL/BS - Load Page" sap:VirtualizedContainerService.HintSize="572,297" sap2010:WorkflowViewState.IdRef="Sequence_108">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Path.GetFileName(In_filePath), dtCoB.Rows(0)(currentItem) , &quot;Check to PL/BS&quot;, PLBSInput.ToString}]" DataTable="[In_Out_dtReportPLBSInput]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="388,186" sap2010:WorkflowViewState.IdRef="AddDataRow_11" />
                                </Sequence>
                                <Sequence DisplayName="Process Check Sheet" sap:VirtualizedContainerService.HintSize="572,2500" sap2010:WorkflowViewState.IdRef="Sequence_91">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="sd:DataTable" Name="dtChkItemValue" />
                                    <Variable x:TypeArguments="sc:IEnumerable" Name="filteredDT" />
                                    <Variable x:TypeArguments="sd:DataTable" Name="dtInfoIncomplete" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Get Check Item Name Range" sap:VirtualizedContainerService.HintSize="510,82" sap2010:WorkflowViewState.IdRef="Assign_50">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[ChkItemNameRange]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[New String(chkPageChkRange.Select(Function(c) If(Char.IsLetter(c), "A"c, c)).ToArray())]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="510,82" sap2010:WorkflowViewState.IdRef="Assign_51">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[chkPageName]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[dtScenarioValue.AsEnumerable().Where(Function(x) x("Variable").Equals("load_chk_input_range")).Select(Function(y) y("Worksheet"))(0).ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:ExcelReadRange AddHeaders="True" DataTable="[dtChkItemName]" DisplayName="Read check item name dt" sap:VirtualizedContainerService.HintSize="510,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_5" Range="[ChkItemNameRange]" SheetName="[chkPageName]" />
                                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="510,52" sap2010:WorkflowViewState.IdRef="CommentOut_10">
                                    <ui:CommentOut.Body>
                                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="506,280" sap2010:WorkflowViewState.IdRef="Sequence_157">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ueab:ReadRangeX DisplayName="Read check item name dt" sap:VirtualizedContainerService.HintSize="444,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_11" Range="[Excel.Sheet(chkPageName).Range(ChkItemNameRange)]" SaveTo="[dtChkItemName]" VisibleOnly="False">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ueab:ReadRangeX>
                                      </Sequence>
                                    </ui:CommentOut.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:CommentOut>
                                  <ui:ExcelReadRange AddHeaders="True" DataTable="[dtChkItemValue]" DisplayName="Read check item value" sap:VirtualizedContainerService.HintSize="510,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_6" Range="[chkPageChkRange]" SheetName="[chkPageName]" />
                                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="510,52" sap2010:WorkflowViewState.IdRef="CommentOut_11">
                                    <ui:CommentOut.Body>
                                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="506,280" sap2010:WorkflowViewState.IdRef="Sequence_158">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ueab:ReadRangeX DisplayName="Read check item value" sap:VirtualizedContainerService.HintSize="444,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_12" Range="[Excel.Sheet(chkPageName).Range(chkPageChkRange)]" SaveTo="[dtChkItemValue]" VisibleOnly="False">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ueab:ReadRangeX>
                                      </Sequence>
                                    </ui:CommentOut.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:CommentOut>
                                  <Assign DisplayName="Filter check value dt" sap:VirtualizedContainerService.HintSize="510,83" sap2010:WorkflowViewState.IdRef="Assign_52">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="sc:IEnumerable">[filteredDT]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="sc:IEnumerable" xml:space="preserve">[(From row In dtChkItemValue.AsEnumerable()
                From column In dtChkItemValue.Columns.Cast(Of DataColumn)()
                Where row(column) IsNot DBNull.Value AndAlso (row(column).ToString() = "Info Incomplete" OrElse row(column).ToString() = "Incomplete Info")
                Select New With
                {
                    .Index = dtChkItemValue.Rows.IndexOf(row),
                    .ColumnHeader = column.ColumnName
                })]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:BuildDataTable DataTable="[dtInfoIncomplete]" DisplayName="Create Output DataTable" sap:VirtualizedContainerService.HintSize="510,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Index&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Period&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Item&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName /&gt;&#xA;&lt;/NewDataSet&gt;" />
                                  <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="510,816" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[filteredDT]">
                                    <ui:ForEach.Body>
                                      <ActivityAction x:TypeArguments="x:Object">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:Object" Name="currentItem" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476,630" sap2010:WorkflowViewState.IdRef="Sequence_92">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dict" />
                                            <Variable x:TypeArguments="x:String" Name="ItemStr" />
                                            <Variable x:TypeArguments="sd:DataRow" Name="drNewRow" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_53">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[ItemStr]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[currentItem.ToString.replace("{ Index = ","").replace(" ColumnHeader = ","").replace(" }","")]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:MultipleAssign DisplayName="Fill up new row info" sap:VirtualizedContainerService.HintSize="434,194" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                                            <ui:MultipleAssign.AssignOperations>
                                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="sd:DataRow">[drNewRow]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="sd:DataRow">[dtInfoIncomplete.NewRow()]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Object">[drNewRow("Index")]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:Int32">[Int32.Parse(currentItem.ToString.replace("{ Index = ","").replace(" ColumnHeader = ","").replace(" }","").split(",")(0).trim())]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Object">[drNewRow("Period")]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">[currentItem.ToString.replace("{ Index = ","").replace(" ColumnHeader = ","").replace(" }","").split(",")(1).Trim()]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:Object">[drNewRow("Item")]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:Object">[dtChkItemName.Rows(Int32.Parse(currentItem.ToString.replace("{ Index = ","").replace(" ColumnHeader = ","").replace(" }","").split(",")(0).trim()))(0)]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                              </scg:List>
                                            </ui:MultipleAssign.AssignOperations>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:MultipleAssign>
                                          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[drNewRow]" DataTable="[dtInfoIncomplete]" DisplayName="Attach new row to output dt" sap:VirtualizedContainerService.HintSize="434,186" sap2010:WorkflowViewState.IdRef="AddDataRow_5">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:AddDataRow>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ForEach.Body>
                                  </ui:ForEach>
                                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtInfoIncomplete]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="510,682" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                                    <ui:ForEachRow.Body>
                                      <ActivityAction x:TypeArguments="sd:DataRow">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="472,567" sap2010:WorkflowViewState.IdRef="Sequence_111">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If Condition="[Not String.IsNullOrWhiteSpace(CurrentRow(0).ToString)]" sap:VirtualizedContainerService.HintSize="410,456" sap2010:WorkflowViewState.IdRef="If_20">
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="376,274" sap2010:WorkflowViewState.IdRef="Sequence_109">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{docName, dtCoB.Rows(0)(currentItem) , CurrentRow.ToString, &quot;&quot;}]" DataTable="[In_Out_dtReportCheckSummary]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,186" sap2010:WorkflowViewState.IdRef="AddDataRow_15" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_110">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ForEachRow.Body>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:ForEachRow>
                                </Sequence>
                                <If Condition="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_pl_range&quot;)).Select(Function(y) y(docName))(0).ToString.Contains(&quot;:&quot;)]" DisplayName="Condition for PL - Load Page" sap:VirtualizedContainerService.HintSize="572,877" sap2010:WorkflowViewState.IdRef="If_24">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="476,363" sap2010:WorkflowViewState.IdRef="Sequence_120">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelReadRange AddHeaders="False" DataTable="[dtPLValue]" DisplayName="Read Range - PL" sap:VirtualizedContainerService.HintSize="434,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_7" Range="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_pl_range&quot;)).Select(Function(y) y(docName))(0).ToString]" SheetName="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_pl_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString]" />
                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="CommentOut_12">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="506,280" sap2010:WorkflowViewState.IdRef="Sequence_159">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ueab:ReadRangeX DisplayName="Read Range - PL" HasHeaders="False" sap:VirtualizedContainerService.HintSize="444,169" sap2010:WorkflowViewState.IdRef="ReadRangeX_15" Range="[Excel.Sheet(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_pl_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString).Range(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_pl_range&quot;)).Select(Function(y) y(docName))(0).ToString)]" SaveTo="[dtPLValue]" />
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CommentOut>
                                      <Assign DisplayName="Sum Total PL" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_56">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Double">[PLValue]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Double" xml:space="preserve">[(From d In dtPLValue.AsEnumerable() 
Where (Not String.IsNullOrWhiteSpace(d(0).ToString.Trim) And Not d(0).ToString.Trim.Equals("-")) 
Select v = CDbl(d(0).ToString.Trim)).Sum(Function(x) x)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap:VirtualizedContainerService.HintSize="376,332" sap2010:WorkflowViewState.IdRef="Sequence_121">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:String" Name="PLValueStr" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelReadCell Cell="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_pl_range&quot;)).Select(Function(y) y(docName))(0).ToString]" DisplayName="Read Cell Value - PL" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_4" SheetName="[dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_pl_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString]">
                                        <ui:ExcelReadCell.Result>
                                          <OutArgument x:TypeArguments="x:Double">[PLValue]</OutArgument>
                                        </ui:ExcelReadCell.Result>
                                      </ui:ExcelReadCell>
                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="CommentOut_13">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="506,270" sap2010:WorkflowViewState.IdRef="Sequence_160">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ueab:ReadCellValueX Cell="[Excel.Sheet(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_pl_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString).Cell(dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_pl_range&quot;)).Select(Function(y) y(docName))(0).ToString)]" DisplayName="Read Cell Value - Load Balance" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="444,159" sap2010:WorkflowViewState.IdRef="ReadCellValueX_8">
                                              <ueab:ReadCellValueX.SaveTo>
                                                <OutArgument x:TypeArguments="x:String">[PLValueStr]</OutArgument>
                                              </ueab:ReadCellValueX.SaveTo>
                                            </ueab:ReadCellValueX>
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CommentOut>
                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="CommentOut_30">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_183">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_71">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Double">[PLValue]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Double">[CDbl(PLValueStr)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CommentOut>
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <Assign sap:VirtualizedContainerService.HintSize="572,82" sap2010:WorkflowViewState.IdRef="Assign_60">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Double">[totalPLValue]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Double">[totalPLValue + PLValue]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Path.GetFileName(In_filePath), dtCoB.Rows(0)(currentItem), &quot;Success&quot;, &quot;&quot;}]" DataTable="[in_out_dtProcessResult]" DisplayName="Add Data Row Process Result" sap:VirtualizedContainerService.HintSize="572,186" sap2010:WorkflowViewState.IdRef="AddDataRow_4" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="376,274" sap2010:WorkflowViewState.IdRef="Sequence_99">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Path.GetFileName(In_filePath), dtCoB.Rows(0)(currentItem), &quot;Failed&quot;, &quot;Formula Result is 0&quot;}]" DataTable="[in_out_dtProcessResult]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,186" sap2010:WorkflowViewState.IdRef="AddDataRow_6" />
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                  <Sequence DisplayName="Set Report Total BS Balance - Load Page" sap:VirtualizedContainerService.HintSize="724,297" sap2010:WorkflowViewState.IdRef="Sequence_104">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Path.GetFileName(In_filePath), &quot;All&quot;, &quot;Total BS Bal (&lt;&quot; + dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;load_sht_bs_bal_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString + &quot;&gt; page)&quot;, totalLoadBalance.ToString}]" DataTable="[In_Out_dtReportLoadBalance]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="388,186" sap2010:WorkflowViewState.IdRef="AddDataRow_7" />
                  </Sequence>
                  <Sequence DisplayName="Set Report Total BS Balance - BS Page" sap:VirtualizedContainerService.HintSize="724,297" sap2010:WorkflowViewState.IdRef="Sequence_105">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Path.GetFileName(In_filePath), &quot;All&quot;, &quot;Total BS Bal (&lt;&quot; + dtScenarioValue.AsEnumerable().Where(Function(x) x(&quot;Variable&quot;).Equals(&quot;total_bs_bal_in_input_range&quot;)).Select(Function(y) y(&quot;Worksheet&quot;))(0).ToString + &quot;&gt; page)&quot;, totalBSBalance.ToString}]" DataTable="[In_Out_dtReportBSBalance]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="388,186" sap2010:WorkflowViewState.IdRef="AddDataRow_8" />
                  </Sequence>
                  <Sequence DisplayName="Set Report Total PL - Load Page" sap:VirtualizedContainerService.HintSize="724,297" sap2010:WorkflowViewState.IdRef="Sequence_106">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Path.GetFileName(In_filePath), &quot;All&quot;, &quot;Total PL&quot;, totalPLValue.ToString}]" DataTable="[In_Out_dtReportSumLoad]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="388,186" sap2010:WorkflowViewState.IdRef="AddDataRow_9" />
                  </Sequence>
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
  </Sequence>
</Activity>